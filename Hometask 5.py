# 1. Дано целое число (int). Определить сколько нулей в этом числе.

number = 145000000
count = str(number).count("0")
print(count)

################################################################################

# 2. Дано целое число (int). Определить сколько нулей в конце этого числа.

number = 100000000020
number_reverse = int(str(number)[::-1])
print(len(str(number)) - len(str(number_reverse)))

################################################################################

# 3. Даны списки my_list_1 и my_list_2. Создать список my_result в который
# вначале поместить четные элементы (ИМЕННО ЭЛЕМЕНТЫ) из my_list_1 и потом нечетные элементы из my_list_2.
# my_list_1 = [1,2,3,4,5], my_list_2 = [10, 15, 20, 25] -> my_result [2, 4, 15, 25]

my_list_1 = [1,2,3,4,5]
my_list_2 = [10, 15, 20, 25]
my_result = []

for index, item in enumerate(my_list_1):
    if not index % 2:
        my_result.append(item)

for index, item in enumerate(my_list_2):
    if index % 2:
        my_result.append(item)

print(my_result)

################################################################################

# 4. Дан список my_list. СОЗДАТЬ НОВЫЙ список new_list у которого первый элемент из my_list
# стоит на последнем месте. Если my_list [1,2,3,4], то new_list [2,3,4,1]

my_list = [1,2,3,4]
new_list = []

my_list.append(my_list[0])
my_list.remove(my_list[0])

print(my_list)

################################################################################

# 5.Дан список my_list. В ЭТОМ списке первый элемент переставить на последнее место.
# [1,2,3,4] -> [2,3,4,1]. Пересоздавать список нельзя! (используйте метод pop)

my_list = [1,2,3,4]
my_list.insert(3, my_list.pop(0))
print(my_list)

################################################################################

# 6. Дана строка в которой есть числа (разделяются пробелами).
# Например "43 больше чем 34 но меньше чем 56". Найти сумму ВСЕХ ЧИСЕЛ (А НЕ ЦИФР) в этой строке.
# Для данного примера ответ - 133.

string = "43 больше чем 34 но меньше чем 56"
numbers = []

for element in string.split(" "):
    if element.isdigit():
        numbers.append(int(element))

print(sum(numbers))

################################################################################

# 7. Дана строка my_str. Разделите эту строку на пары из двух символов и поместите эти пары в список.
# Если строка содержит нечетное количество символов, пропущенный второй символ последней пары должен
# быть заменен подчеркиванием ('_'). Примеры: 'abcd' -> ['ab', 'cd'], 'abcde' -> ['ab', 'cd', e_']

my_str = "abcdefg"
my_str = list(my_str)
new = []
result = []

if len(my_str) % 2:
    my_str.append('_')

for index in range(0, len(my_str), 2):
    new.append(my_str[index:index + 2])

for item in new:
    result.append(item[0] + item[1])

print(result)

################################################################################

# 8. Дана строка my_str в которой символы не повторяются и два символа l_limit, r_limit,
# которые точно находятся в этой строке. Причем l_limit левее чем r_limit.
# В переменную sub_str поместить часть строки между этими символами.
# my_str = "My_long str", l_limit = "o", r_limit = "t" -> sub_str = "ng s"

my_str = "My_long str"
l_limit = "o"
r_limit = "t"

sub_str = my_str[my_str.find(l_limit)+1:my_str.find(r_limit)]
print(sub_str)

################################################################################

# 9. Дана строка my_str в которой символы МОГУТ повторяться и два символа l_limit, r_limit,
# которые точно находятся в этой строке. Причем l_limit левее чем r_limit.
# В переменную sub_str поместить НАИБОЛЬШУЮ часть строки между этими символами.
# my_str = "My long string", l_limit = "o", r_limit = "g" -> sub_str = "ng strin".

my_str = "My long string"
l_limit = "o"
r_limit = "g"

sub_str = my_str[my_str.find(l_limit)+1:my_str.rfind(r_limit)]
print(sub_str)

################################################################################

# 10. Дан список чисел. Определите, сколько в этом списке элементов,
# которые больше суммы двух своих соседей (слева и справа), и НАПЕЧАТАЙТЕ КОЛИЧЕСТВО таких элементов.
# Крайние элементы списка никогда не учитываются, поскольку у них недостаточно соседей.
# Для списка [2,4,1,5,3,9,0,7] ответом будет 3 потому что 4 > 2+1, 5 > 1+3, 9>3+0.


my_list = [2,4,1,5,3,9,0,7]
count = 0

for index in range(1, len(my_list) - 1):
    if my_list[index] > my_list[index - 1] + my_list[index + 1]:
        count += 1

print(count)

################################################################################